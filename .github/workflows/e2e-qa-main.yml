name: qa-e2e main
on: 
  workflow_dispatch:

env:
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  BASE_URL: "https://xray.cloud.getxray.app"
  FILE: "cucumber-json/cucumber-report.json"
  KEY_CYPRESS: ${{ secrets.KEY_CYPRESS }}
  #USERS
  CYPRESS_USER_EMAIL_01: ${{ secrets.CYPRESS_USER_EMAIL_01 }}
  CYPRESS_USER_EMAIL_02: ${{ secrets.CYPRESS_USER_EMAIL_02 }}
  CYPRESS_USER_EMAIL_03: ${{ secrets.CYPRESS_USER_EMAIL_03 }}
  CYPRESS_USER_EMAIL_04: ${{ secrets.CYPRESS_USER_EMAIL_04 }}
  CYPRESS_USER_EMAIL_05: ${{ secrets.CYPRESS_USER_EMAIL_05 }}
  CYPRESS_USER_EMAIL_06: ${{ secrets.CYPRESS_USER_EMAIL_06 }}
  CYPRESS_USER_EMAIL_07: ${{ secrets.CYPRESS_USER_EMAIL_07 }}
  CYPRESS_USER_EMAIL_08: ${{ secrets.CYPRESS_USER_EMAIL_08 }}
  CYPRESS_USER_EMAIL_09: ${{ secrets.CYPRESS_USER_EMAIL_09 }}
  CYPRESS_USER_EMAIL_10: ${{ secrets.CYPRESS_USER_EMAIL_10 }}
  CYPRESS_USER_EMAIL_11: ${{ secrets.CYPRESS_USER_EMAIL_11 }}
  CYPRESS_USER_EMAIL_12: ${{ secrets.CYPRESS_USER_EMAIL_12 }}
  CYPRESS_USER_EMAIL_13: ${{ secrets.CYPRESS_USER_EMAIL_13 }}
  CYPRESS_USER_EMAIL_14: ${{ secrets.CYPRESS_USER_EMAIL_14 }}
  CYPRESS_USER_EMAIL_15: ${{ secrets.CYPRESS_USER_EMAIL_15 }}
  CYPRESS_USER_EMAIL_16: ${{ secrets.CYPRESS_USER_EMAIL_16 }}
  CYPRESS_USER_EMAIL_17: ${{ secrets.CYPRESS_USER_EMAIL_17 }}
  CYPRESS_USER_EMAIL_18: ${{ secrets.CYPRESS_USER_EMAIL_18 }}
  CYPRESS_USER_EMAIL_19: ${{ secrets.CYPRESS_USER_EMAIL_19 }}
  CYPRESS_USER_EMAIL_20: ${{ secrets.CYPRESS_USER_EMAIL_20 }}
  CYPRESS_USER_EMAIL_21: ${{ secrets.CYPRESS_USER_EMAIL_21 }}
  CYPRESS_USER_EMAIL_22: ${{ secrets.CYPRESS_USER_EMAIL_22 }}
  CYPRESS_USER_EMAIL_23: ${{ secrets.CYPRESS_USER_EMAIL_23 }}
  CYPRESS_USER_EMAIL_24: ${{ secrets.CYPRESS_USER_EMAIL_24 }}

  CYPRESS_SECRET_01: ${{ secrets.CYPRESS_SECRET_01_PROD }}
  CYPRESS_SECRET_02: ${{ secrets.CYPRESS_SECRET_02_PROD }}
  CYPRESS_SECRET_03: ${{ secrets.CYPRESS_SECRET_03_PROD }}
  CYPRESS_SECRET_04: ${{ secrets.CYPRESS_SECRET_04_PROD }}
  CYPRESS_SECRET_05: ${{ secrets.CYPRESS_SECRET_05_PROD }}
  CYPRESS_SECRET_06: ${{ secrets.CYPRESS_SECRET_06_PROD }}
  CYPRESS_SECRET_07: ${{ secrets.CYPRESS_SECRET_07_PROD }}
  CYPRESS_SECRET_08: ${{ secrets.CYPRESS_SECRET_08_PROD }}
  CYPRESS_SECRET_09: ${{ secrets.CYPRESS_SECRET_09_PROD }}
  CYPRESS_SECRET_10: ${{ secrets.CYPRESS_SECRET_10_PROD }}
  CYPRESS_SECRET_11: ${{ secrets.CYPRESS_SECRET_11_PROD }}
  CYPRESS_SECRET_12: ${{ secrets.CYPRESS_SECRET_12_PROD }}
  CYPRESS_SECRET_13: ${{ secrets.CYPRESS_SECRET_13_PROD }}
  CYPRESS_SECRET_14: ${{ secrets.CYPRESS_SECRET_14_PROD }}
  CYPRESS_SECRET_15: ${{ secrets.CYPRESS_SECRET_15_PROD }}
  CYPRESS_SECRET_16: ${{ secrets.CYPRESS_SECRET_16_PROD }}
  CYPRESS_SECRET_17: ${{ secrets.CYPRESS_SECRET_17_PROD }}
  CYPRESS_SECRET_18: ${{ secrets.CYPRESS_SECRET_18_PROD }}
  CYPRESS_SECRET_19: ${{ secrets.CYPRESS_SECRET_19_PROD }}
  CYPRESS_SECRET_20: ${{ secrets.CYPRESS_SECRET_20_PROD }}
  CYPRESS_SECRET_21: ${{ secrets.CYPRESS_SECRET_21_PROD }}
  CYPRESS_SECRET_22: ${{ secrets.CYPRESS_SECRET_22_PROD }}
  CYPRESS_SECRET_23: ${{ secrets.CYPRESS_SECRET_23_PROD }}
  CYPRESS_SECRET_24: ${{ secrets.CYPRESS_SECRET_24_PROD }}

  CYPRESS_USER_PASSWORD: ${{ secrets.CYPRESS_USER_PASSWORD }}
  CYPRESS_SKIPCAPTCHA: ${{ secrets.CYPRESS_SKIPCAPTCHA }}
  CYPRESS_SIGN_IN: ${{ secrets.CYPRESS_SIGN_IN }}
  CYPRESS_SIGN_UP: ${{ secrets.CYPRESS_SIGN_UP }}

jobs:
  counterparties:
    runs-on: [self-hosted, e2e]
    timeout-minutes: 50
    # let's make sure our tests pass on Chrome browser
    container: 
      image: cypress/browsers:node16.17.0-chrome106
      options: --user root  # ← THIS IS THE IMPORTANT LINE!
    name: home
          
    steps:
      - uses: actions/checkout@v3
        with:
          ref: main

      - name: Cache node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
            
        # This step is run when the tag is staging-XXX
      - name: Prepare
        run: |
          rm -f cucumber-json/*.json
          rm -f cucumber-json/*.ndjson
          rm -rf cypress/screenshots
          mkdir -p cypress/screenshots          
          npm install -g @deepakvishwakarma/cucumber-json-formatter
          
      - name: Install Dependencies
        run: npm install

      - name: Cypress tests
        uses: cypress-io/github-action@v4
        # let's give this action an ID so we can refer
        # to its output values later
        id: cypress
        # Continue the build in case of an error, as we need to set the
        # commit status in the next step, both in case of success and failure
        continue-on-error: true
        with:
          record: false
          browser: chrome
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.KEY_CYPRESS }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Print Cypress Cloud URL
        run: |
          echo Cypress finished with: ${{ steps.cypress.outcome }}
          echo See results at ${{ steps.cypress.outputs.dashboardUrl }}

      - name: Run report
        run: npm run report:formatter

      - name: Create cucumber-report.json
        run: cat cucumber-json/cucumber-messages.ndjson | cucumber-json-formatter > cucumber-json/cucumber-report.json

      - name: Get token
        id: xray-token
        run: |
          echo "XRAY_TOKEN=$(curl --location --request POST '${{ env.BASE_URL }}/api/v1/authenticate' \
                --header 'Content-Type: application/json' \
                --data-raw '{
                    "client_id": "${{ secrets.XRAY_CLIENT_ID }}",
                    "client_secret": "${{ secrets.XRAY_CLIENT_SECRET }}"
                }'| tr -d '"')" >> $GITHUB_OUTPUT

      - name: Export results to xray
        run: |
          curl -H "Content-Type: application/json" -X POST -H "Authorization: Bearer ${{ steps.xray-token.outputs.XRAY_TOKEN }}"  --data @"$FILE" "${{ env.BASE_URL }}/api/v1/import/execution/cucumber"

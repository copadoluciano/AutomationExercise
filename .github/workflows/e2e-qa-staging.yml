name: qa-e2e staging
on:
  workflow_dispatch:
    inputs:
      testname:
        description: 'The name test case to execute.'
        required: true
  schedule:
    - cron: '0 */30 1-31 * *'

jobs:
  cypress:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    # let's make sure our tests pass on Chrome browser
    container: 
      image: cypress/browsers:node16.17.0-chrome106
      options: --user root  # ← THIS IS THE IMPORTANT LINE!
    name: cypress + cucumber + jira tests
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      BASE_URL: "https://xray.cloud.getxray.app"
      FILE: "cucumber-json/cucumber-report.json"
    steps:
      - uses: actions/checkout@v3

      - name: Cache node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
            
        # This step is run when the tag is staging-XXX
      - name: Prepare
        run: |
          rm -f cucumber-json/*.json
          rm -f cucumber-json/*.ndjson
          npm install -g @deepakvishwakarma/cucumber-json-formatter
          

      # - name: Install Dependencies
      #   run: npm install
        
      # - name: Run test
      #   continue-on-error: true
      #   run: npm run test      

      # - name: Run report
      #   run: npm run report:formatter

      # - name: Create cucumber-report.json
      #   run: cat cucumber-json/cucumber-messages.ndjson | cucumber-json-formatter > cucumber-json/cucumber-report.json

      - name: Get token
        id: xray-token
        run: |
          echo "XRAY_TOKEN=$(curl --location --request POST '${{ env.BASE_URL }}' \
                --header 'Content-Type: application/json' \
                --data-raw '{
                    "client_id": "${{ secrets.XRAY_CLIENT_ID }}",
                    "client_secret": "${{ secrets.XRAY_CLIENT_SECRET }}"
                }')" >> $GITHUB_OUTPUT

      - name: echo token
        run: ${{ steps.xray-token.outputs.XRAY_TOKEN }}

      # - name: 'Upload screenshots and videos to Slack'
      #   uses: trymbill/cypress-slack-video-upload-action@v1.3.0
      #   if: failure()
      #   with:
      #     token: ${{ secrets.SLACK_ALARMS_TOKEN }}
      #     channels: 'cypress-e2e-staging'
      #     message-text: 'Environment Demo - E2E tests in branch develop is failed! add evidence to this thread, check ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }} '

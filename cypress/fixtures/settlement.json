{
    "global": {
        "buttons":{
            "buttonPendingSettlements": "//button[contains(.,'Pending Settlements')]",
            "buttonPastSettlements": "//button[contains(.,'Past Settlements')]",
            "buttonGenerateNewSettlements": "//button[@data-cy='button_generate_settlement_open_modal']",
            "clearFilters": "//button[@data-cy='button_clear_filters']"
        },
        "labels":{
            "from": "//span[@data-cy='span_data_picker_from']",
            "to": "//span[@data-cy='span_data_picker_to']",
            "counterparty": "//span[contains(text(),'Counterparty')]",
            "settlementId": "//div[@data-cy='0_settlement_id']",
            "createdOn": "//div[@data-cy='1_created_on']",
            "counterparty2": "//div[@data-cy='2_counterparty']",
            "status": "//div[@data-cy='3_status']"
        },
        "fields":{
            "from": "//input[@data-cy='input_data_picker_from']",
            "to": "//input[@data-cy='input_data_picker_to']",
            "counterparty": "//input[@data-cy='input_counterparty']",
            "settlementId": "//div[@data-cy='settlementcicleid_0']",
            "createdOn": "//div[@data-cy='createdon_0']",
            "counterparty2": "//div[@data-cy='counterpartyname_0']",
            "status": "//div[@data-cy='ciclestatus_2']"
        }
        
    },
    "settlementOpen":{
            "buttons":{
                "actionPending": "//div[contains(text(),'Action Pending')]",
                "processing": "//div[contains(text(),'Processing')]",
                "completed": "//div[contains(text(),'Completed')]"

            },
            "labels":{
                "backTosettlements":"//span[contains(text(),'Back to Settlements')]",
                "settlementWith": "//h2[contains(text(),'Settlement with')]",
                "settlementId": "//div[contains(text(),'SETTLEMENT ID')]",
                "createdOn": "//div[contains(text(),'CREATED ON')]",
                "counterparty": "//div[contains(text(),'COUNTERPARTY')]",
                "totalInstructions": "//div[contains(text(),'TOTAL INSTRUCTIONS')]",
                "status": "//div[contains(@class,'styles_cardDetailLabel_')][contains(.,'STATUS')]",

                "instructionId": "//div[@data-cy='0_instruction_id']",
                "instruction": "//div[@data-cy='1_instruction']",
                "statusInstruction": "//div[@data-cy='2_status']",
                "action": "//div[@data-cy='3_action']"
    
            },
            "fields":{
                "settlementId": "//div[contains(text(),'stc_')]",
                "createdOn": "(//div[contains(@class,'styles_cardDetailValue__')])[2]",
                "counterparty": "//div[contains(text(),'Cypress')]",
                "totalInstructions": "(//div[contains(@class,'styles_cardDetailValue__')])[4]",
                "status": "(//div[contains(@class,'styles_cardDetailValue__')])[5]",

                "instructionId": "//div[@data-cy='settlementid_0']",
                "instruction": "//div[contains(@class,'styles_instructionName__XpBjR')]",
                "statusInstruction": "//div[contains(text(),'Waiting')]",
                "action": "//span[contains(text(),'Try Signing anyway')]"
    
            }
        },
        
        


    
    "past": {
        "labelFrom": "",
        "labelTo": "",
        "labelResetAll": "",
        "labelBlockchainInst": "",
        "labelId": "",
        "labelSettlementDate": "",
        "labelCompleteDate": "",
        "labelSettlement": "",
        "labelAmount": "",
        "labelTxId": "",
        "labelShow": "(//div[contains(.,'Show')])[9]",
        "fieldDate": "",
        "buttonFilter": ""
    },
    "fees": {
        "btc": {
            "iconBtc": "//H4[text()='Bitcoin']/preceding-sibling::IMG",
            "labelBitcoin": "(//h4[contains(.,'Bitcoin')])[1]",
            "unityGas": "(//h6[contains(.,'Satoshis per byte')])[1]",
            "valueGas": "//span[contains(.,'1 Satoshi = 0.00000001 BTC')]"
        },
        "eth": {
            "iconEth": "//H4[text()='Ethereum']/preceding-sibling::IMG",
            "labelEth": "(//h4[contains(.,'Ethereum')])[1]",
            "unityGas": "(//h6[contains(.,'Gwei per gas')])[1]",
            "valueGas": "(//span[contains(.,'1 Gwei = 0.000000001 ETH')])[1]"
        },
        "bch": {
            "iconBch": "//H4[text()='Bitcoin Cash']/preceding-sibling::IMG",
            "labelBch": "//h4[contains(.,'Bitcoin Cash')]",
            "unityGas": "(//h6[contains(.,'Satoshis per byte')])[2]",
            "valueGas": "//span[contains(.,'1 Satoshi = 0.00000001 BCH')]"
        },
        "ltc": {
            "iconLtc": "//H4[text()='Litecoin']/preceding-sibling::IMG",
            "labelLtc": "//h4[contains(.,'Litecoin')]",
            "unityGas": "//h6[contains(.,'Litoshis per byte')]",
            "valueGas": "//span[contains(.,'1 Litoshi = 0.00000001 LTC')]"
        }
    },
    "newSettlement1": {
        "labelTittle": "//h2[@data-cy='modal_title']",
        "labelSubtittle": "//div[contains(text(),'Please, select the counterparty to settle with')]",
        "fieldInput": "(//div[@class='styles_fieldInput__IDY-B'])[1]",
        "btnNext": "//span[contains(text(),'Next')]/ancestor::button",
        "btnCancel": "//span[contains(text(),'Cancel')]"
        
    },
    "newSettlement2": {
        "labelTittle": "//h2[@data-cy='modal_title']",
        "labelSubtittle1": "//p[contains(text(),'This settlement can be generated in a decentralize')]",
        "labelSubtittle2": "//p[contains(text(),'Please, select whether you want to continue or use')]",
        "btnClassic": "(//button[@data-cy='wallets_select_option_button'])[1]",
        "btnDecentralized": "(//button[@data-cy='wallets_select_option_button'])[2]",
        "btnNext": "//span[contains(text(),'Next')]/ancestor::button",
        "btnBack": "//span[contains(text(),'Back')]"
        
    },
    "others": {
        "fieldInput": "(//div[@class='styles_fieldInput__IDY-B'])[1]",
        "nextBtn": "//span[contains(text(),'Next')]/ancestor::button",
        "lastDisplayInfoRow": "(//*[local-name()='svg' and @data-icon='chevron-down'])[2]"
    },
    "generateSettlement": {
        "global": {
            "labelGenerateSettlement": "//DIV[@class='styles_newSettlementTitle__hTJcI'][text()='Generate new settlement']",
            "labelGenerateSettlement2": "//div[contains(text(),'Generate new settlement with')]",
            "alertReview": "//div[contains(text(),'Please, review the instructions before accepting')]",
            "generateSettlementBtn": "//span[contains(text(),'+ Generate New Settlement')]"
        },
        "instructions": {
            "labelInstruction": "//div[contains(text(),'INSTRUCTION')]",
            "labelInstructions": "//h3[contains(text(),'Instructions')]",
            "labelMaxExtimated": "//div[contains(text(),'MAX ESTIMATED BLOCKCHAIN FEE')]",
            "labelType": "(//DIV[text()='TYPE'])[1]",
            "iconAsset": "(//IMG[@alt='icon asset'])[1]",
            "iconAsset2": "(//IMG[@alt='icon asset'])[2]",
            "valueSend": "(//DIV[contains(@class,'styles_tableCell_')])[1]",
            "valueMaxFee1": "(//DIV[contains(@class,'styles_tableCell_')])[2]",
            "valueType1": "(//DIV[contains(@class,'styles_tableCell_')])[3]",
            "valueReceive": "(//DIV[contains(@class,'styles_tableCell_')])[4]",
            "valueMaxFee2": "(//DIV[contains(@class,'styles_tableCell_')])[5]",
            "valueType2": "(//DIV[contains(@class,'styles_tableCell_')])[6]"
        },
        "relatedTransactions": {
            "labelRelatedTransactions": "//h3[contains(text(),'Related Membrane Transactions')]",
            "labelTransactionId": "//div[contains(text(),'TRANSACTION ID')]",
            "labelCreatedOn": "//div[contains(text(),'CREATED ON')]",
            "labelType": "(//DIV[text()='TYPE'])[2]",
            "labelCredit": "//div[contains(text(),'CREDIT/(DEBIT)')]",
            "valueTrx": "//div[contains(text(),'trx_')]",

            "valueType": "//div[contains(text(),'Trading Order') or contains(text(),'Loan')]",
            "valueCreditDebit": "//div[contains(text(),'0000')]",
            "orderId": "//span[contains(.,'Order ID:')]",
            "orderType": "//span[contains(.,'Order Type:')]",
            "sendReceiveValue": "//DIV[@class='styles_operationContainer__ZjD-N']",

            "side": "//span[contains(text(),'maker') or contains(text(),'taker')]"
        },
        "pendingSettlement": {
            "labelId": "//div[contains(text(),'ID')]",
            "labelCreatedOn": "//div[contains(text(),'CREATED ON')]",
            "labelCounterparty": "//div[contains(text(),'COUNTERPARTY')]",
            "labelStatus": "//div[contains(text(),'STATUS')]",

            "valueId": "//DIV[contains(@class,'styles_tableCell__')][contains(text(),'stc_')]",
            "valueStatus": "//div[contains(.,'Action Pending')]"
        },
        "pendingSettlementOpen":{
            "labelSettlementWith": "//div[contains(text(),'Settlement with')]",
            "labelId": "//div[contains(text(),'SETTLEMENT ID')]",
            "labelCreatedOn": "//div[contains(text(),'CREATED ON')]",
            "labelTotalInstructions": "//div[contains(text(),'TOTAL INSTRUCTIONS')]",
            "valueId": "//DIV[contains(@class,'styles_tableCell__')][contains(text(),'stc_')]",
            "valueTotalInstructions": "//DIV[@class='styles_tableCell__4RsDS'][text()='1' or text()='2']",
            "labelActionPending": "//button[contains(text(),'Action Pending (1)')]",
            "labelProcessing": "//button[contains(text(),'Processing')]",
            "labelCompleted": "//button[contains(text(),'Completed')]",
            "labelBlockchainInst": "//h3[contains(text(),'Blockchain Instructions')]",
            "labelInstructionId": "//div[contains(text(),'INSTRUCTION ID')]",
            "labelInstruction": "//DIV[text()='INSTRUCTION']",
            "maxEstimatedFee": "//div[contains(text(),'MAX ESTIMATED BLOCKCHAIN FEE')]",
            "labelStatus": "//div[contains(text(),'STATUS')]",
            "labelAction": "//div[contains(text(),'ACTION')]",
            "valueInstructionId": "//DIV[contains(@class,'styles_tableCell__')][contains(text(),'stp_')]",
            "valueInstruction": "//DIV[contains(@class,'styles_instructionName__')]",
            "valueEstimatedFee": "//DIV[contains(@class,'styles_blockchainFee__')]",
            "valueStatus": "//div[contains(text(),'You have not set a sending address')]"

        }
    },
    "generateDecentralizedSettlement":{
        "global": {
            "labelGenerateSettlement": "//DIV[@class='styles_newSettlementTitle__hTJcI'][text()='Generate new settlement']",
            "labelGenerateSettlement2": "//div[contains(text(),'Generate new settlement with')]",
            "labelSecure": "//div[@data-cy='alert_message_warning']",
            "alertReview": "//div[@data-cy='alert_message_info']",
            "generateSettlementBtn": "//span[contains(text(),'+ Generate New Settlement')]"
        },
        "instructions": {
            "labelInstruction": "//div[contains(text(),'INSTRUCTION')]",
            "labelInstructions": "//h3[contains(text(),'Instructions')]",
            "labelType": "(//DIV[text()='TYPE'])[1]",
            "iconAsset": "(//IMG[@alt='icon asset'])[1]",
            "iconAsset2": "(//IMG[@alt='icon asset'])[2]",
            "valueSend": "(//DIV[contains(@class,'styles_tableCell_')])[1]",
            "valueType1": "(//DIV[contains(@class,'styles_tableCell_')])[2]",
            "valueReceive": "(//DIV[contains(@class,'styles_tableCell_')])[3]",
            "valueType2": "(//DIV[contains(@class,'styles_tableCell_')])[4]"
        },
        "relatedTransactions": {
            "labelRelatedTransactions": "//h3[contains(text(),'Related Membrane Transactions')]",
            "labelTransactionId": "//div[contains(text(),'TRANSACTION ID')]",
            "labelCreatedOn": "//div[contains(text(),'CREATED ON')]",
            "labelType": "(//DIV[text()='TYPE'])[2]",
            "labelCredit": "//div[contains(text(),'CREDIT/(DEBIT)')]",
            "valueTrx": "//div[contains(text(),'trx_')]",

            "valueType": "//div[contains(text(),'Trading Order') or contains(text(),'Trading Order')]",
            "valueCreditDebit": "//div[contains(text(),'0000')]",
            "orderId": "//span[contains(.,'Order ID:')]",
            "orderType": "//span[contains(.,'Order Type:')]",
            "sendReceiveValue": "//DIV[@class='styles_operationContainer__ZjD-N']",

            "side": "//span[contains(text(),'maker') or contains(text(),'taker')]"
        }

    }
}